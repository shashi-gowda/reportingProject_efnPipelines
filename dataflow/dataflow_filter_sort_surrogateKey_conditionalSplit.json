{
	"name": "dataflow_filter_sort_surrogateKey_conditionalSplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_onCloudSqlServer_emp",
						"type": "DatasetReference"
					},
					"name": "empData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_blob2_container",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPNO as decimal(4,0),",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as decimal(4,0),",
				"          HIREDATE as timestamp,",
				"          SAL as decimal(7,2),",
				"          COMM as decimal(7,2),",
				"          DEPTNO as decimal(2,0)",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> empData",
				"sort1 filter(DEPTNO==30 && JOB=='SALESMAN') ~> filter1",
				"surrogateKey1 sort(asc(DEPTNO, true),",
				"     asc(JOB, true)) ~> sort1",
				"split1@dept10 keyGenerate(output(rowNo as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"empData split(DEPTNO==10,",
				"     DEPTNO==20,",
				"     DEPTNO==30,",
				"     disjoint: false) ~> split1@(dept10, dept20, dept30)",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Continent as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}